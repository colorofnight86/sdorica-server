<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sdorica.dao.CharacterMapper">
  <resultMap id="BaseResultMap" type="com.example.sdorica.domain.Character">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="position" jdbcType="INTEGER" property="position" />
    <result column="have" jdbcType="INTEGER" property="have" />
    <result column="skill_1" jdbcType="VARCHAR" property="skill1" />
    <result column="skill_2" jdbcType="VARCHAR" property="skill2" />
    <result column="skill_3" jdbcType="VARCHAR" property="skill3" />
    <result column="skill_4" jdbcType="VARCHAR" property="skill4" />
    <result column="skill_6" jdbcType="VARCHAR" property="skill6" />
    <result column="skill_p" jdbcType="VARCHAR" property="skillP" />
    <result column="skill_a" jdbcType="VARCHAR" property="skillA" />
    <result column="label" jdbcType="VARCHAR" property="label" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, position, have, skill_1, skill_2, skill_3, skill_4, skill_6, skill_p, skill_a, 
    label
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `character`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `character`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.sdorica.domain.Character">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `character` (id, name, position,
      have, skill_1, skill_2, 
      skill_3, skill_4, skill_6, 
      skill_p, skill_a, label
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{position,jdbcType=INTEGER}, 
      #{have,jdbcType=INTEGER}, #{skill1,jdbcType=VARCHAR}, #{skill2,jdbcType=VARCHAR},
      #{skill3,jdbcType=VARCHAR}, #{skill4,jdbcType=VARCHAR}, #{skill6,jdbcType=VARCHAR}, 
      #{skillP,jdbcType=VARCHAR}, #{skillA,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.sdorica.domain.Character">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `character`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="have != null">
        have,
      </if>
      <if test="skill1 != null">
        skill_1,
      </if>
      <if test="skill2 != null">
        skill_2,
      </if>
      <if test="skill3 != null">
        skill_3,
      </if>
      <if test="skill4 != null">
        skill_4,
      </if>
      <if test="skill6 != null">
        skill_6,
      </if>
      <if test="skillP != null">
        skill_p,
      </if>
      <if test="skillA != null">
        skill_a,
      </if>
      <if test="label != null">
        label,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=INTEGER},
      </if>
      <if test="have != null">
        #{have,jdbcType=INTEGER},
      </if>
      <if test="skill1 != null">
        #{skill1,jdbcType=VARCHAR},
      </if>
      <if test="skill2 != null">
        #{skill2,jdbcType=VARCHAR},
      </if>
      <if test="skill3 != null">
        #{skill3,jdbcType=VARCHAR},
      </if>
      <if test="skill4 != null">
        #{skill4,jdbcType=VARCHAR},
      </if>
      <if test="skill6 != null">
        #{skill6,jdbcType=VARCHAR},
      </if>
      <if test="skillP != null">
        #{skillP,jdbcType=VARCHAR},
      </if>
      <if test="skillA != null">
        #{skillA,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.sdorica.domain.Character">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `character`
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=INTEGER},
      </if>
      <if test="have != null">
        have = #{have,jdbcType=INTEGER},
      </if>
      <if test="skill1 != null">
        skill_1 = #{skill1,jdbcType=VARCHAR},
      </if>
      <if test="skill2 != null">
        skill_2 = #{skill2,jdbcType=VARCHAR},
      </if>
      <if test="skill3 != null">
        skill_3 = #{skill3,jdbcType=VARCHAR},
      </if>
      <if test="skill4 != null">
        skill_4 = #{skill4,jdbcType=VARCHAR},
      </if>
      <if test="skill6 != null">
        skill_6 = #{skill6,jdbcType=VARCHAR},
      </if>
      <if test="skillP != null">
        skill_p = #{skillP,jdbcType=VARCHAR},
      </if>
      <if test="skillA != null">
        skill_a = #{skillA,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.sdorica.domain.Character">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `character`
    set name = #{name,jdbcType=VARCHAR},
      position = #{position,jdbcType=INTEGER},
      have = #{have,jdbcType=INTEGER},
      skill_1 = #{skill1,jdbcType=VARCHAR},
      skill_2 = #{skill2,jdbcType=VARCHAR},
      skill_3 = #{skill3,jdbcType=VARCHAR},
      skill_4 = #{skill4,jdbcType=VARCHAR},
      skill_6 = #{skill6,jdbcType=VARCHAR},
      skill_p = #{skillP,jdbcType=VARCHAR},
      skill_a = #{skillA,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="allCharacter" resultMap="BaseResultMap">
    select * from `character`;
  </select>
  <select id="characterOfName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from `character`
    where name = #{name, jdbcType=VARCHAR}
  </select>
  <select id="characterOfPosition" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from `character`
    where position = #{position, jdbcType=VARCHAR}
  </select>
  <select id="characterOfSearch" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from `character`
    where ${from} != '' and ${from} like concat('%',#{keyword, jdbcType=VARCHAR},'%')
  </select>
  <select id="characterOfSearchAll" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from `character`
    where `skill_1` like concat('%',#{keyword, jdbcType=VARCHAR},'%')
    or `skill_2` like concat('%',#{keyword, jdbcType=VARCHAR},'%')
    or `skill_3` like concat('%',#{keyword, jdbcType=VARCHAR},'%')
    or `skill_4` like concat('%',#{keyword, jdbcType=VARCHAR},'%')
    or `skill_6` like concat('%',#{keyword, jdbcType=VARCHAR},'%')
    or `skill_P` like concat('%',#{keyword, jdbcType=VARCHAR},'%')
    or `skill_A` like concat('%',#{keyword, jdbcType=VARCHAR},'%')
  </select>
  <select id="characterOfFilter" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from `character`
    where `name` != ""
    <if test="have != 'all'">
      and `have` = #{have, jdbcType=VARCHAR}
    </if>
    <if test="position != 'all'">
      and `position` = #{position, jdbcType=VARCHAR}
    </if>
    <if test="number != 'all'">
      and ${number} != ""
    </if>
    <if test="type != 'all'">
      and `name` like concat('%',#{type, jdbcType=VARCHAR},'%')
    </if>
  </select>

</mapper>